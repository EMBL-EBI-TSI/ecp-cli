#!/usr/bin/python

from __future__ import print_function
import requests
import sys
import os
import argparse
import json
import getpass

def geturl(res, name):
  baseurl = 'https://api.portal.tsi.ebi.ac.uk'
  if res == 'cred':
    respath = '/cloudproviderparameters/'
  elif res == 'param':
    respath = '/configuration/deploymentparameters/'
  elif res == 'config':
    respath = '/configuration/'
  elif res == 'app':
    respath = '/application/'
  elif res == 'deployment':
    respath = '/deployment/'
  elif res == 'logs':
    return baseurl+'/deployment/'+name+'/logs'

  return baseurl+respath+name

def main(argv):
  parser = argparse.ArgumentParser(description='EBI CLoud Portal CLI')
  parser.add_argument('verb', help='Action to perform on resource, one of get/create/delete/stop(deployments only)')
  parser.add_argument('resource', nargs='?', help='Resource type to perform action on, one of: cred/param/config/app/deployment/logs')
  parser.add_argument('name', nargs='?', help='Resource name to perform action on', default='')
  parser.add_argument('--file', '-f', help='File containing JSON to post')
  parser.add_argument('--token', '-t', help='File containing JWT identity token, is sourced from ECP_TOKEN env var by default')

  args=parser.parse_args()

  if args.verb != 'login':
    url = geturl(args.resource, args.name)
  #print('Calling url: '+url)

  if args.token is not None:
    with open(args.token, 'r') as tokenfile:
      token = tokenfile.read().replace('\n','')
  elif "ECP_TOKEN" in os.environ:
    token = os.environ["ECP_TOKEN"]
  elif os.path.isfile(os.environ['HOME']+'/.ecp_token'):
    with open(os.environ['HOME']+'/.ecp_token', 'r') as tokenfile:
      token = tokenfile.read().replace('\n','')
  else:
    token = ''

  headers = {'Authorization': 'Bearer '+token, 'Content-Type': 'application/json'}
  

  if args.verb == 'get':
    r = requests.get(url, headers=headers)
  elif args.verb == 'create':
    with open(args.file, 'r') as json_file:
      r = requests.post(url, headers=headers, data = json_file.read())
  elif args.verb == 'delete':
    r = requests.delete(url, headers=headers)
  elif args.verb == 'stop':
    r = requests.put(url+'/stop', headers=headers)
  elif args.verb == 'login':
    user = raw_input('Please enter your username: ')
    pw   = getpass.getpass(prompt = 'Please enter your password: ')
    r = requests.get('https://api.aai.ebi.ac.uk/auth', auth=(user,pw))
    with open(os.environ['HOME']+'/.ecp_token', 'w') as tokenfile:
      print(r.text, file=tokenfile)
    print('Logged in with token: '+r.text)
    return
  else:
    r = '{}'
    print('unknown verb, please run with --help for usage')

  try:
    print(json.dumps(r.json(), indent=2))
  except:
    print("Could not decode Json, raw response:")
    print(r.text)

if __name__ == "__main__":
  main(sys.argv)
